// Code generated by goctl. DO NOT EDIT.
// goctl 1.9.1
// Source: user.proto

package userclient

import (
	"context"

	"rpc/user"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	EmailReq     = user.EmailReq
	IdReq        = user.IdReq
	UserInfoResp = user.UserInfoResp

	User interface {
		// 通过用户ID查询
		GetUserById(ctx context.Context, in *IdReq, opts ...grpc.CallOption) (*UserInfoResp, error)
		// 通过邮箱查询
		GetUserByEmail(ctx context.Context, in *EmailReq, opts ...grpc.CallOption) (*UserInfoResp, error)
	}

	defaultUser struct {
		cli zrpc.Client
	}
)

func NewUser(cli zrpc.Client) User {
	return &defaultUser{
		cli: cli,
	}
}

// 通过用户ID查询
func (m *defaultUser) GetUserById(ctx context.Context, in *IdReq, opts ...grpc.CallOption) (*UserInfoResp, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.GetUserById(ctx, in, opts...)
}

// 通过邮箱查询
func (m *defaultUser) GetUserByEmail(ctx context.Context, in *EmailReq, opts ...grpc.CallOption) (*UserInfoResp, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.GetUserByEmail(ctx, in, opts...)
}
